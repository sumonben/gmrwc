# Generated by Django 5.1 on 2024-09-30 14:50

import ckeditor.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0011_student_is_active_teacher_is_active_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BcsBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='StudentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(default=10)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('title_en', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            options={
                'ordering': ['serial'],
            },
        ),
        migrations.AlterModelOptions(
            name='teacher',
            options={'ordering': ['tid']},
        ),
        migrations.AddField(
            model_name='teacher',
            name='bio_en',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='teacher',
            name='message_en',
            field=ckeditor.fields.RichTextField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='position',
        ),
        migrations.AlterField(
            model_name='teacher',
            name='batch',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.bcsbatch'),
        ),
        migrations.AlterField(
            model_name='student',
            name='class_year',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.class'),
        ),
        migrations.AlterField(
            model_name='teacher',
            name='designation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.designation'),
        ),
        migrations.AlterField(
            model_name='student',
            name='group',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.group'),
        ),
        migrations.AlterField(
            model_name='student',
            name='session',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.session'),
        ),
        migrations.AlterField(
            model_name='student',
            name='student_category',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.studentcategory'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='position',
            field=models.ManyToManyField(blank=True, null=True, to='account.position'),
        ),
    ]
